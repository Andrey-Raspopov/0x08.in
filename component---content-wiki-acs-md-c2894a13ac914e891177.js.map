{"version":3,"sources":["webpack:///./content/wiki/acs.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"4OAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,yCACA,6DACA,mDACA,sBACE,kBAAIC,WAAW,MAAf,8CACA,kBAAIA,WAAW,MAAf,uCACA,kBAAIA,WAAW,MAAf,qGAEF,4KACA,+EACA,sFACA,qCACA,mFACA,iHAAgG,+BAAGA,WAAW,KAAQ,CAClH,KAAQ,yCADoF,kBAAhG,KAGA,kGACA,mDACA,2FACA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,0CADT,0BAAH,KAGA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,gDADT,mCAGH,qCACA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,0CADT,8BAOPJ,EAAWK,gBAAiB","file":"component---content-wiki-acs-md-c2894a13ac914e891177.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/0x08.in/0x08.in/src/components/Layout/index.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Функции системы`}</h2>\n    <p>{`Аутентифицировать участников по NFC.`}</p>\n    <p>{`Авторизировать участников:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Открывать магнитный замок на внешней двери`}</li>\n      <li parentName=\"ul\">{`Открывать электромеханический замок`}</li>\n      <li parentName=\"ul\">{`Переводить хакспейс между состояниями включено/выключено: включать контактором розетки, вывеску.`}</li>\n    </ul>\n    <p>{`Управлять освещением на лестнице и в тамбуре по показаниям датчиков двери: при открытии любой из дверей включать свет на заданный интервал времени.`}</p>\n    <p>{`На доп. панель в общем зале выводить состояние дверей.`}</p>\n    <p>{`Осуществлять открытие дверей с помощью кнопки на доп. панели.`}</p>\n    <h2>{`Архитектура`}</h2>\n    <p>{`Система состоит из Modubs шины и центрального контроллера.`}</p>\n    <p>{`Центральный контроллер работает на Raspberry Pi. Софт контроллера размещен в репозитории `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/b4ck5p4c3/asc_rpi\"\n      }}>{`github:asc_rpi`}</a>{`.`}</p>\n    <p>{`Общая схема соединений: (github:asc)`}{`[https://github.com/b4ck5p4c3/asc]`}</p>\n    <h2>{`Устройства на modbus-шине`}</h2>\n    <h3>{`remote-IO плата Kviver Endpointpp (установлена под главным щитом)`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/wiki/acs/assets/endpointpp_rev_1.pdf\"\n      }}>{`Схема Endpointpp rev 1`}</a>{`.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/b4ck5p4c3/asc_endpointpp\"\n      }}>{`прошивка github:asc_endpointpp`}</a></p>\n    <h3>{`RFID-reader`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/b4ck5p4c3/asc_rfid\"\n      }}>{`прошивка github:asc_rfid`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}